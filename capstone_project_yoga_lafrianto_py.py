# -*- coding: utf-8 -*-
"""CAPSTONE PROJECT_YOGA_LAFRIANTO.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1keyhbe2k1FoooeDeXhnaB4Exdm0_I4un

#STOCK OPNAME BARANG TOKO

Yoga Lafrianto merupakan seorang programer yang handal, kebetulan yoga ini merupakan anak dari pemilik sebuah toko sembako yang masih melakukan stock opname secara manual ditulis pada dalam kertas. Yoga berinisiatif untuk membuat sebuah program stock opname yang sederhana memiliki fungsi CRUD pada sistem yang nantinya dibuat. Pada sistem ini yoga hanya membutuhkan kode dari produk, kemudian nama dari masing-masing produk, harga satuan beserta quantity, stock yang dimiliki di toko, dan kategory dari product yang ada. Dalam sistem ini yoga juga dapat mengetahui secara langsung total aset dagangan yang dimiliki.

Feature:

1. Create
2. Read
3. Update
4. Delete
5. Menghitung Total Nilai Aset Product
6. Validasi Kode agar tidak diizinkan untuk double

Keys:
1. Index (Auto Fill)
2. Kode
3. Nama Barang
4. Satuan
5. Harga
6. Kategori
7. Stock

#Import Tabulate
"""

!pip install tabulate
from tabulate import tabulate

"""# Database dummy data"""

data = [
    {"Kode": "AA", "Nama Barang": "Gula", "Satuan": "Kg", "Harga": 8000, "Stock": 50, "Kategori": "Bahan Pokok"},
    {"Kode": "BB", "Nama Barang": "Beras", "Satuan": "Kg", "Harga": 15500, "Stock": 320, "Kategori": "Makanan & Minuman"},
    {"Kode": "CC", "Nama Barang": "Susu Beruang", "Satuan": "Pcs", "Harga": 10000, "Stock": 80, "Kategori": "Minuman Kaleng"},
]

"""#Function Perhitungan

##Menghitung Aset Setiap Jenis Product
"""

def aset_per_jenis_product():
  aset_per_produk = 0
  for i in data:
      aset_per_produk = int(i['Harga']) * int(i['Stock'])
      print(f"Aset Produk {i['Nama Barang']}\t\t: {aset_per_produk}")
  #return total_aset_perproduct

"""##Menghitung Jumlah Total Aset"""

def total_aset():
  total_aset_perproduct = 0
  aset_per_produk = 0
  for i in data:
      aset_per_produk = int(i['Harga']) * int(i['Stock'])
      total_aset_perproduct += aset_per_produk
  print("=========================================")
  print("Total Aset Dagangan Anda \t: ",total_aset_perproduct)
  print("=========================================")
  return total_aset_perproduct

"""#Validasi Kode Sudah Ada Atau Belum"""

def kode_sudah_ada(kode_baru):
    for item in data:
        if item['Kode'] == kode_baru:
            return True
    return False

"""#Validasi Function Input

##Inputan Alfabet & Unik Character
"""

import regex as re

def input_alfabet_character(prompt='Masukkan input: '):
    while True:
        inputan = input(prompt)
        if re.match(r'^[\w\s*&]+$', inputan):
            return inputan
        else:
            print('Input anda tidak valid. Silakan coba lagi.')

"""##Input Alfabet"""

def input_alfabet(prompt='Masukkan input: '):
    while True:
        inputan = input(prompt)
        if inputan.replace(" ", "").isalpha():
            return inputan
        else:
            print('Input anda harus berupa huruf saja. Silakan coba lagi.')

"""##Input Numeric"""

def input_numerik(prompt= 'Masukkan Angka: '):
    inputan = input(prompt)
    if inputan.isdigit():
        return int(inputan) # berhenti loop
    else:
        print('input anda bukan angka')
        input_numerik()

"""#Function Create"""

def create_data_baru():
  while True:
        kode = input_alfabet("Masukan Kode Barang\t: ").upper()
        if not kode_sudah_ada(kode):
            break
        else:
            print("Kode sudah ada. Pilih kode lain atau update data yang sudah ada.\n")
            return

  nama = input_alfabet("Masukan Nama Barang\t: ")
  satuan = input_alfabet("Masukan Jenis Satuan\t: ")
  harga = input_numerik("Masukan Harga\t\t: ")
  stok = input_numerik("Masukan Jumlah Stock\t: ")
  kategori = input_alfabet_character("Masukan Jenis Kategori\t: ")
  data.append({"Kode": kode, "Nama Barang": nama, "Satuan": satuan, "Harga": harga, "Stock": stok, "Kategori": kategori})
  print("\n***Data berhasil ditambahkan***\n")

"""#Function Read"""

def read_data(data):
  indexed_data = [{"Index": idx + 1, **item} for idx, item in enumerate(data)]
  print(tabulate(indexed_data, headers='keys', tablefmt='pretty'))

"""#Function Update"""

def update_data():
  while True:
    row = input_numerik("Masukan Baris Keberapa Yang Ingin Diupdate ") - 1

    if row >= len(data) or row < 0:
        print("Baris tidak valid.")
        return

    kolom = input_alfabet('Pilih Kolom Yang Ingin Dirubah: ')
    if kolom in data[row]:
        current_value = data[row][kolom]
        print(f"\n****Nilai saat ini pada baris {row+1}, kolom {kolom}: {current_value}***\n")

        if kolom == 'Kode':
            while True:
                kode_baru = input_alfabet('Masukan Kode Baru\t: ').upper()
                if not kode_sudah_ada(kode_baru):
                    data[row][kolom] = kode_baru
                    break
                else:
                    print("\n***Kode sudah ada. Pilih kode lain atau update data yang sudah ada.***\n")
        elif kolom in ['Nama Barang', 'Satuan']:
            data[row][kolom] = input_alfabet(f'Masukan {kolom} Baru\t: ')
        elif kolom in ['Kategori']:
            data[row][kolom] = input_alfabet_character(f'Masukan {kolom} Baru\t: ')
        elif kolom in ['Harga', 'Stock']:
            data[row][kolom] = input_numerik(f'Masukan {kolom} Baru\t: ')
        print('\n***Data berhasil diupdate***\n')
        break
    else:
        print('Kolom tidak ada.')

"""#Function Delete"""

def delet_data(data, kode):
  for i, entry in enumerate(data):
        if entry["Kode"] == kode:
          nama = entry.get("Nama Barang", "Unknown")
          data.pop(i)
          print(f"\nData dengan kode {kode}, dengan nama barang {nama} berhasil dihapus.\n")
          break

"""#Main"""

def main():
  while True:
    print("\n")
    print("==========================================")
    print('  Stock Opname Toko Sembako Endah Jaya.   ')
    print("==========================================")

    print('''
        1. Create Data
        2. Read Data
        3. Update Data
        4. Delete Data
        5. Total Aset Product Dimiliki
        6. Exit
        ''')
    print("\n")

    pilih_aksi = input_numerik("Masukan Angka Menu Apa Yang Ingin Dipilih: ")
    if pilih_aksi == 1:
      create_data_baru()
    elif pilih_aksi == 2:
      read_data(data)
    elif pilih_aksi == 3:
      update_data()
    elif pilih_aksi == 4:
      kode = input_alfabet("Masukan Kode Barang: ")
      delet_data(data, kode)
    elif pilih_aksi == 5:
      aset_per_jenis_product()
      total_aset()
    elif pilih_aksi == 6:
      print("\n")
      print("===================================")
      print('  Terimakasih Update Datanya ;)')
      print("===================================")
      break
    else:
      print("Data tidak ditemukan")

"""#Run Code"""

main()

